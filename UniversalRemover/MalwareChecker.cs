using System;
using System.Collections.Generic;
using System.IO;
using System.Reflection;
using System.Text;

public class MalwareChecker
{
    private List<Func<string, (bool, string)>> _checkMethods;

    public MalwareChecker()
    {
        _checkMethods = new List<Func<string, (bool, string)>>();
        _checkMethods.Add(IsMalwareAssembly);
        _checkMethods.Add(IsQuasarExecutable);
    }

    public (bool, string) IsMalware(string filePath)
    {
        foreach (var checkMethod in _checkMethods)
        {
            var result = checkMethod(filePath);
            if (result.Item1)
            {
                return result;
            }
        }
        return (false, null);
    }

    public void AddCheckMethod(Func<string, (bool, string)> checkMethod)
    {
        _checkMethods.Add(checkMethod);
    }

    private (bool, string) IsMalwareAssembly(string filePath)
    {
        try
        {
            var assemblyName = AssemblyName.GetAssemblyName(filePath);
            if (assemblyName.Name.Contains("NanoCore") && !assemblyName.Name.Contains("NanoCoreRemover"))
            {
                return (true, "NanoCore");
            }
            else if (assemblyName.Name.Contains("Orcus"))
            {
                return (true, "Orcus");
            }
            return (false, null);
        }
        catch
        {
            return (false, null);
        }
    }

    private (bool, string) IsQuasarExecutable(string filePath)
    {
        try
        {
            byte[] fileContent = File.ReadAllBytes(filePath);
            string contentAsString = Encoding.UTF8.GetString(fileContent);
            if (contentAsString.Contains("DQuasar.Common, Version=1.4.1.0, Culture=neutral, PublicKeyToken=null"))
            {
                return (true, "Quasar");
            }
            return (false, null);
        }
        catch
        {
            return (false, null);
        }
    }
}
